// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/accrual.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	"github.com/rawen554/goph-keeper/internal/adapters/accrual"
)

// MockAccrual is a mock of Accrual interface.
type MockAccrual struct {
	ctrl     *gomock.Controller
	recorder *MockAccrualMockRecorder
}

// MockAccrualMockRecorder is the mock recorder for MockAccrual.
type MockAccrualMockRecorder struct {
	mock *MockAccrual
}

// NewMockAccrual creates a new mock instance.
func NewMockAccrual(ctrl *gomock.Controller) *MockAccrual {
	mock := &MockAccrual{ctrl: ctrl}
	mock.recorder = &MockAccrualMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccrual) EXPECT() *MockAccrualMockRecorder {
	return m.recorder
}

// GetOrderInfo mocks base method.
func (m *MockAccrual) GetOrderInfo(num string) (*accrual.AccrualOrderInfoShema, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrderInfo", num)
	ret0, _ := ret[0].(*accrual.AccrualOrderInfoShema)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrderInfo indicates an expected call of GetOrderInfo.
func (mr *MockAccrualMockRecorder) GetOrderInfo(num interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrderInfo", reflect.TypeOf((*MockAccrual)(nil).GetOrderInfo), num)
}
